{"version":3,"file":"pending-requests-interceptor.service.d.ts","sources":["pending-requests-interceptor.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA","sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { ExistingProvider } from '@angular/core';\nimport { Observable } from 'rxjs';\nexport declare class PendingRequestsInterceptor implements HttpInterceptor {\n    private _pendingRequests;\n    private _pendingRequestsStatus$;\n    private _filteredUrlPatterns;\n    private _filteredMethods;\n    private _filteredHeaders;\n    private _forceByPass;\n    get pendingRequestsStatus$(): Observable<boolean>;\n    get pendingRequests(): number;\n    get filteredUrlPatterns(): RegExp[];\n    set filteredMethods(httpMethods: string[]);\n    set filteredHeaders(value: string[]);\n    set forceByPass(value: boolean);\n    private shouldBypassUrl;\n    private shouldBypassMethod;\n    private shouldBypassHeader;\n    private shouldBypass;\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;\n}\nexport declare const PendingRequestsInterceptorProvider: ExistingProvider[];\n"]}